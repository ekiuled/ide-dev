//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/cthfvrl/Code/hw/ide-dev/PascalLexer/antlr/Grammar.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public partial class Grammar : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Number=1, Identifier=2, CharacterString=3;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"Number", "Sign", "UnsignedInteger", "UnsignedReal", "ScaleFactor", "DigitSequence", 
		"BinSequence", "HexSequence", "OctalSequence", "Digit", "Hex", "Octal", 
		"Bin", "Identifier", "Letter", "Underscore", "CharacterString", "QuotedString", 
		"Quote", "ControlString"
	};


	public Grammar(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Grammar(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "Number", "Identifier", "CharacterString"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static Grammar() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x5', '\x8E', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x3', 
		'\x2', '\x5', '\x2', '-', '\n', '\x2', '\x3', '\x2', '\x3', '\x2', '\x5', 
		'\x2', '\x31', '\n', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x5', '\x4', '<', '\n', '\x4', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x5', '\x5', '\x41', '\n', '\x5', '\x3', '\x5', '\x5', 
		'\x5', '\x44', '\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x5', '\x6', 
		'H', '\n', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x6', '\a', 
		'M', '\n', '\a', '\r', '\a', '\xE', '\a', 'N', '\x3', '\b', '\x6', '\b', 
		'R', '\n', '\b', '\r', '\b', '\xE', '\b', 'S', '\x3', '\t', '\x6', '\t', 
		'W', '\n', '\t', '\r', '\t', '\xE', '\t', 'X', '\x3', '\n', '\x6', '\n', 
		'\\', '\n', '\n', '\r', '\n', '\xE', '\n', ']', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x5', '\xF', 'j', '\n', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\a', '\xF', 'o', '\n', '\xF', '\f', 
		'\xF', '\xE', '\xF', 'r', '\v', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x6', '\x12', 'z', 
		'\n', '\x12', '\r', '\x12', '\xE', '\x12', '{', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\a', '\x13', '\x83', 
		'\n', '\x13', '\f', '\x13', '\xE', '\x13', '\x86', '\v', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x2', '\x2', '\x16', '\x3', '\x3', '\x5', '\x2', 
		'\a', '\x2', '\t', '\x2', '\v', '\x2', '\r', '\x2', '\xF', '\x2', '\x11', 
		'\x2', '\x13', '\x2', '\x15', '\x2', '\x17', '\x2', '\x19', '\x2', '\x1B', 
		'\x2', '\x1D', '\x4', '\x1F', '\x2', '!', '\x2', '#', '\x5', '%', '\x2', 
		'\'', '\x2', ')', '\x2', '\x3', '\x2', '\n', '\x4', '\x2', '-', '-', '/', 
		'/', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x3', '\x2', '\x32', ';', '\x5', 
		'\x2', '\x32', ';', '\x43', 'H', '\x63', 'h', '\x3', '\x2', '\x32', '\x39', 
		'\x3', '\x2', '\x32', '\x33', '\x4', '\x2', '\x43', '\\', '\x63', '|', 
		'\x4', '\x2', '\f', '\f', ')', ')', '\x2', '\x90', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'#', '\x3', '\x2', '\x2', '\x2', '\x3', ',', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x32', '\x3', '\x2', '\x2', '\x2', '\a', ';', '\x3', '\x2', '\x2', 
		'\x2', '\t', '=', '\x3', '\x2', '\x2', '\x2', '\v', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'L', '\x3', '\x2', '\x2', '\x2', '\xF', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x11', 'V', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'[', '\x3', '\x2', '\x2', '\x2', '\x15', '_', '\x3', '\x2', '\x2', '\x2', 
		'\x17', '\x61', '\x3', '\x2', '\x2', '\x2', '\x19', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', '\x65', '\x3', '\x2', '\x2', '\x2', '\x1D', 'i', 
		'\x3', '\x2', '\x2', '\x2', '\x1F', 's', '\x3', '\x2', '\x2', '\x2', '!', 
		'u', '\x3', '\x2', '\x2', '\x2', '#', 'y', '\x3', '\x2', '\x2', '\x2', 
		'%', '}', '\x3', '\x2', '\x2', '\x2', '\'', '\x89', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x8B', '\x3', '\x2', '\x2', '\x2', '+', '-', '\x5', '\x5', 
		'\x3', '\x2', ',', '+', '\x3', '\x2', '\x2', '\x2', ',', '-', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x30', '\x3', '\x2', '\x2', '\x2', '.', '\x31', '\x5', 
		'\a', '\x4', '\x2', '/', '\x31', '\x5', '\t', '\x5', '\x2', '\x30', '.', 
		'\x3', '\x2', '\x2', '\x2', '\x30', '/', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x32', '\x33', '\t', '\x2', '\x2', 
		'\x2', '\x33', '\x6', '\x3', '\x2', '\x2', '\x2', '\x34', '<', '\x5', 
		'\r', '\a', '\x2', '\x35', '\x36', '\a', '&', '\x2', '\x2', '\x36', '<', 
		'\x5', '\x11', '\t', '\x2', '\x37', '\x38', '\a', '(', '\x2', '\x2', '\x38', 
		'<', '\x5', '\x13', '\n', '\x2', '\x39', ':', '\a', '\'', '\x2', '\x2', 
		':', '<', '\x5', '\xF', '\b', '\x2', ';', '\x34', '\x3', '\x2', '\x2', 
		'\x2', ';', '\x35', '\x3', '\x2', '\x2', '\x2', ';', '\x37', '\x3', '\x2', 
		'\x2', '\x2', ';', '\x39', '\x3', '\x2', '\x2', '\x2', '<', '\b', '\x3', 
		'\x2', '\x2', '\x2', '=', '@', '\x5', '\r', '\a', '\x2', '>', '?', '\a', 
		'\x30', '\x2', '\x2', '?', '\x41', '\x5', '\r', '\a', '\x2', '@', '>', 
		'\x3', '\x2', '\x2', '\x2', '@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\x5', '\v', '\x6', 
		'\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\x3', 
		'\x2', '\x2', '\x2', '\x44', '\n', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'G', '\t', '\x3', '\x2', '\x2', '\x46', 'H', '\x5', '\x5', '\x3', '\x2', 
		'G', '\x46', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\x3', '\x2', '\x2', 
		'\x2', 'H', 'I', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x5', '\r', '\a', 
		'\x2', 'J', '\f', '\x3', '\x2', '\x2', '\x2', 'K', 'M', '\x5', '\x15', 
		'\v', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', 
		'\x2', '\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\x3', '\x2', 
		'\x2', '\x2', 'O', '\xE', '\x3', '\x2', '\x2', '\x2', 'P', 'R', '\x5', 
		'\x1B', '\xE', '\x2', 'Q', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', 
		'\x3', '\x2', '\x2', '\x2', 'S', 'Q', '\x3', '\x2', '\x2', '\x2', 'S', 
		'T', '\x3', '\x2', '\x2', '\x2', 'T', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'U', 'W', '\x5', '\x17', '\f', '\x2', 'V', 'U', '\x3', '\x2', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'Z', '\\', '\x5', '\x19', '\r', '\x2', '[', 'Z', '\x3', '\x2', 
		'\x2', '\x2', '\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '[', '\x3', 
		'\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', '\x2', '\x2', '^', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '_', '`', '\t', '\x4', '\x2', '\x2', '`', 
		'\x16', '\x3', '\x2', '\x2', '\x2', '\x61', '\x62', '\t', '\x5', '\x2', 
		'\x2', '\x62', '\x18', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\t', 
		'\x6', '\x2', '\x2', '\x64', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x66', '\t', '\a', '\x2', '\x2', '\x66', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'j', '\x5', '\x1F', '\x10', '\x2', 'h', 'j', '\x5', '!', '\x11', 
		'\x2', 'i', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'p', '\x3', '\x2', '\x2', '\x2', 'k', 'o', '\x5', '\x1F', 
		'\x10', '\x2', 'l', 'o', '\x5', '\x15', '\v', '\x2', 'm', 'o', '\x5', 
		'!', '\x11', '\x2', 'n', 'k', '\x3', '\x2', '\x2', '\x2', 'n', 'l', '\x3', 
		'\x2', '\x2', '\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 'o', 'r', '\x3', 
		'\x2', '\x2', '\x2', 'p', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', 
		'\x2', '\x2', '\x2', 'q', '\x1E', '\x3', '\x2', '\x2', '\x2', 'r', 'p', 
		'\x3', '\x2', '\x2', '\x2', 's', 't', '\t', '\b', '\x2', '\x2', 't', ' ', 
		'\x3', '\x2', '\x2', '\x2', 'u', 'v', '\a', '\x61', '\x2', '\x2', 'v', 
		'\"', '\x3', '\x2', '\x2', '\x2', 'w', 'z', '\x5', '%', '\x13', '\x2', 
		'x', 'z', '\x5', ')', '\x15', '\x2', 'y', 'w', '\x3', '\x2', '\x2', '\x2', 
		'y', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', '\x2', '\x2', '\x2', 
		'{', 'y', '\x3', '\x2', '\x2', '\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', 
		'|', '$', '\x3', '\x2', '\x2', '\x2', '}', '\x84', '\x5', '\'', '\x14', 
		'\x2', '~', '\x83', '\n', '\t', '\x2', '\x2', '\x7F', '\x80', '\x5', '\'', 
		'\x14', '\x2', '\x80', '\x81', '\x5', '\'', '\x14', '\x2', '\x81', '\x83', 
		'\x3', '\x2', '\x2', '\x2', '\x82', '~', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x7F', '\x3', '\x2', '\x2', '\x2', '\x83', '\x86', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\x3', 
		'\x2', '\x2', '\x2', '\x85', '\x87', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x84', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x5', '\'', '\x14', 
		'\x2', '\x88', '&', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', 
		')', '\x2', '\x2', '\x8A', '(', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8C', 
		'\a', '%', '\x2', '\x2', '\x8C', '\x8D', '\x5', '\t', '\x5', '\x2', '\x8D', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x14', '\x2', ',', '\x30', ';', '@', 
		'\x43', 'G', 'N', 'S', 'X', ']', 'i', 'n', 'p', 'y', '{', '\x82', '\x84', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
